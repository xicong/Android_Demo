apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs'//适用于java 和 kotlin
apply plugin: "androidx.navigation.safeargs.kotlin"


android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.cong.demo"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res',
                            
                            'src/main/res_zidingyiview',
                            
                            'src/main/res_shijianfenfa',
                            
                            'src/main/res_lliaojieactivitydeqidongguocheng',
                            
                            'src/main/res_activity',
                            
                            'src/main/res_fragment',
                            
                            'src/main/res_rx',
                            
                            'src/main/res_xianchengorxiecheng',
                            
                            'src/main/res_mergeadapter',
                            
                            'src/main/res_jetpack',
                            
                            'src/main/res_bluetooth',
                            
                            'src/main/res_mvp',
                            'src/main/res_mvvm',
                            'src/main/res_mvc',

                            'src/main/res_utils',
                            
                            'src/main/res_protobuf'
                            
                    ]
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8 
        targetCompatibility = JavaVersion.VERSION_1_8 
    }

    buildFeatures{
        dataBinding = true
        viewBinding = true
    }
//    viewBinding {
//        enabled = true
//    }
//    dataBinding {
//        enabled = true
//    }

    //声明编译的jvm版本
    kotlinOptions {
        jvmTarget = "1.8" 
    }
// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //kotlin的标准库
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.30"

    //Androidx
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    
    implementation project(path: ':libs:xc_permission_lib')
    
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation 'junit:junit:4.13.2'

    //constraintlayout
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    //recyclerview
//    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'

    //adapter的一个封装库
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    //协程的基础库
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    //Jetpack 是一套库,工具,和指南
    //基础  
    //      Android KTX    编写更简洁 惯用的kotlin代码
    //      AppComat    在较低版本的Android系统上恰当的降级
    //      Auto    有助于开发Android Auto应用的组件
    //      检测   从AndroidStudio中快速检测基于Kotlin或Java的代码
    //      多dex 安全  为具有多个Dex文件的应用提供支持
    //架构  
    //      数据绑定   以声明方式将可观察数据绑定到界面元素
    //      Lifecycles   管理Activity和Fragment的生命周期
    //      LiveData   在底层数据库更改时通知视图
    //      Navigation    处理应用内导航所需要的一切
    //      paging   逐步从你的数据源按需加载信息
    //      room   流畅的访问sqlist数据库
    //      viewmodel   以注重生命周期的方式管理界面的数据
    //      workManager  管理你的android后台作业
    //行为 
    //      camerax  轻松的向应用添加相机的功能
    //      下载管理器  安排和管理大量的下载任务
    //      媒体和播放   用于媒体播放和路由（包括google cast）的向后兼容api
    //      通知  提供向后兼容的通知api 支持wear auto
    //      权限   用于检查和请求应用权限的兼容api
    //      偏好设置  创建交互式设置屏幕
    //      共享   提供适合应用操作栏的共享操作
    //      切片 创建可在应用外部显示应用数据的灵活切片
    //界面 
    //      动画和过渡  移动微件和屏幕之间的过渡
    //      表情符号   在旧版平台上启用最新的表情符号字体
    //      Fragment   组件化界面的基本单位
    //      布局  使用不用的算法布局布置微件
    //      调色板 调色板中提取出有用的信息
    //LifeCycle是GoogleApp架构中推荐的一个组件   比较方便的管理Activity Fragment的声明周期
    //LifeCycle实现了执行的逻辑和活动的分离，代码解耦并且增加了代码的可读性
    //LifeCycle在活动结束时自定移除监听，避免了声明周期的问题
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "androidx.room:room-compiler:2.2.5"
    implementation "androidx.room:room-ktx:2.2.5"
    
    //BasePopup
    implementation 'com.github.razerdp:BasePopup:2.2.2.2'
    
    
    //数据库
    implementation 'org.litepal.android:java:3.0.0'
    
    //banner
    implementation 'com.youth.banner:banner:2.0.12'
    
    //aria下载
    implementation 'com.arialyy.aria:core:3.8.9'
    kapt 'com.arialyy.aria:compiler:3.8.9'
    implementation 'com.arialyy.aria:ftpComponent:3.8.9'   //如果需要使用ftp，请增加该组件
    implementation 'com.arialyy.aria:sftpComponent:3.8.9'  //如果需要使用ftp，请增加该组件
    implementation 'com.arialyy.aria:m3u8Component:3.8.9'  //如果需要使用m3u8下载功能，请增加该组件
    
    //webview
    implementation 'com.just.agentweb:agentweb:4.1.3' // (必选)
    implementation 'com.just.agentweb:filechooser:4.1.3'// (可选)
    implementation 'com.download.library:Downloader:4.1.3'// (可选)

    //VideoPlayer
    implementation 'com.shuyu:GSYVideoPlayer:7.1.4'
    
    //蓝牙BLE
    //https://github.com/googlearchive/android-BluetoothLeGatt  google官方demo
    implementation 'cn.com.superLei:blelibrary:3.1.0'
    
    //gson
    implementation 'com.google.code.gson:gson:2.8.6'
    
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.retrofit2:converter-scalars:2.0.0"
    
    //fastjson  https://github.com/alibaba/fastjson
//    implementation 'com.alibaba:fastjson:1.2.61'
    implementation 'com.alibaba:fastjson:1.2.48'

    //refresh
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'  //1.0.5及以前版本的老用户升级需谨慎，API改动过大
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.2'  //没有使用特殊Header，可以不加这行

    //FlexboxLayout
    implementation 'com.google.android:flexbox:2.0.1'

    //lottie-android
    implementation 'com.airbnb.android:lottie:3.4.1'

    //时间 日期选择器
    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.11.0"  //用okhttp做为图片加载的底层
    
    //图片压缩
    implementation 'top.zibin:Luban:1.1.8'
    
    //图片选择
    implementation 'com.zhihu.android:matisse:0.5.3-beta3'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.3'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.ypx.yimagepicker:androidx:3.1.4'//小红书多图剪裁+微信图片选择器+大图预览+图片剪裁(支持圆形剪裁和镂空剪裁)，已适配androidQ,借鉴并升级matisse加载内核!超强定制性可轻松实现知乎/马蜂窝/微博等特殊样式!支持跨进程回调!内部结构轻量级，无任何第三方开源库！支持support依赖！

    //处理状态栏导航栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'// 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'// kotlin扩展（可选）

    //eventbus
    implementation 'org.greenrobot:eventbus:3.2.0'
    
    //fragment 停止维护
    implementation 'me.yokeyword:fragmentationx:1.0.2'

    //视频播放  https://github.com/CarGuo/GSYVideoPlayer
    implementation 'com.shuyu:GSYVideoPlayer:7.1.4'

    //文件下载  https://github.com/AriaLyy/Aria
    implementation 'com.arialyy.aria:core:3.8.9'
    kapt 'com.arialyy.aria:compiler:3.8.9'
    implementation 'com.arialyy.aria:ftpComponent:3.8.9' //如果需要使用ftp，请增加该组件
    implementation 'com.arialyy.aria:sftpComponent:3.8.9' //如果需要使用ftp，请增加该组件
    implementation 'com.arialyy.aria:m3u8Component:3.8.9' //如果需要使用m3u8下载功能，请增加该组件

    //utils  https://www.jianshu.com/p/7da141e682c7 屏幕适配用法教程
    implementation 'com.blankj:utilcodex:1.30.7-alpha0'

    //dialog
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
}
